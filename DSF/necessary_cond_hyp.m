function necessary_cond_hyp(n, max_iters)
%NECESSARY_COND_HYP Test the hypothesis that having all 3 conditions
%implies that H has all stable links
% THIS HYPOTHESIS IS MAYBE TRUE
    B = randi([-5 5], n, floor(n/2));

    for i = 1: max_iters
        A = randi([-10 10], n, n);
        while is_stable(A) == 0
            A = randi([-10 10], n, n);
        end
        if 0 == 0
            dsf = DSF(A, B);
            [Q, ~] = dsf.dsf(n);
            H = dsf.vulnerability_matrix(Q);
            for k = 1:n
                for j = 1:n
                    if H(k, j) ~= 0
                        [num, den] = numden(H(k,j));  % num/den of tf entry
                        % coeffs(s^3 + 3s^2 + 10) -> [10, 0, 3, 1]
                        num_coeffs = coeffs(num);
                        den_coeffs = coeffs(den);
                        % convert coeffs to matlab array and reverse order
                        tf_kj = tf(flip(double(num_coeffs)), flip(double(den_coeffs)));
                        poles = pole(tf_kj);
                        if any(poles >= 0)
                            fprintf("unstable link in H at iteration %d \n", i);
                            disp(tf_kj)
                            disp(A)
                            disp(Q)
                            disp(H)
                        end
                    end
                end
            end
        end
    end
end