function sufficient_cond_hyp(n, max_iters)
%SUFFICIENT_COND_HYP Test the hypothesis that having all stable links in Q implies
%all 3 conditions
% THIS HYPOTHESIS IS NOT TRUE
    B = randi([-5 5], n, floor(n/2));

    for i = 1: max_iters
        A = randi([-10 10], n, n);
        while is_stable(A) == 0
            A = randi([-10 10], n, n);
        end
        if  determine_node_removal(A, B) == 0 && determine_nondecreasing(A) == 0 && determine_submodularity(A) == 0
            dsf = DSF(A, B);
            [Q, ~] = dsf.dsf(n);
            for k = 1:n
                for j = 1:n
                    if Q(k, j) ~= 0
                        [num, den] = numden(Q(k,j));  % num/den of tf entry
                        % coeffs(s^3 + 3s^2 + 10) -> [10, 0, 3, 1]
                        num_coeffs = coeffs(num);
                        den_coeffs = coeffs(den);
                        % convert coeffs to matlab array and reverse order
                        tf_kj = tf(flip(double(num_coeffs)), flip(double(den_coeffs)));
                        poles = pole(tf_kj);
                        if any(poles >= 0)
                            fprintf("unstable link at iteration %d \n", i);
                            disp(A)
                            disp(Q)
                        end
                    end
                end
            end
        end
    end
end