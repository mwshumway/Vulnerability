function [H_stable_links] = determine_H_stable(A, B)
%DETERMINE_H_STABLE Determine if H matrix has any unstable links
%   1 if H has all stable links, 0 if there exists at least 1 unstable link
    n = size(A, 1);
    H_stable_links = 1;
    dsf = DSF(A, B);
    [Q, ~] = dsf.dsf(n);
    H = dsf.vulnerability_matrix(Q);
    for k = 1:n
        for j = 1:n
            if H(k, j) ~= 0
                [num, den] = numden(H(k,j));  % num/den of tf entry
                % coeffs(s^3 + 3s^2 + 10) -> [10, 0, 3, 1]
                num_coeffs = coeffs(num);
                den_coeffs = coeffs(den);
                % convert coeffs to matlab array and reverse order
                tf_kj = tf(flip(double(num_coeffs)), flip(double(den_coeffs)));
                poles = pole(tf_kj);
                if any(poles >= 0)
                    H_stable_links = 0;
                    return;
                end
            end
        end
    end
end