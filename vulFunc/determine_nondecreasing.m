function bool = determine_nondecreasing(A)
%DETERMINE_NONDECREASING Return whether or not vulnerability determined
%from A is nondecreasing or not. 1 if not non-decreasing, 0 if non-decreasing.
    [n, ~] = size(A);
    B = randi([-5 5], n, floor(n/2));  % B not necessary in any calculations
    dsf = DSF(A, B);  % initialize DSF
    [Q, ~] = dsf.dsf(n);  % compute Q with no initial abstractions
    H = dsf.vulnerability_matrix(Q);  % (I-Q)^{-1}
    bool = 0;

    vulnerability = dsf.eval_vulnerability(H);  % vulnerability \in R
    
    % note that in the abstraction code, this abstracts the entries
    % beginning at the bottom right, and working up to the left.
    % TODO - edit abstract to also take in the node to abstract
    % fix for now - do a row and column swap 
    for i = n-1:-1:0  % iterate through number of abstractions
        H_i = dsf.abstract(H, i, 0, 0);
        v_i = dsf.eval_vulnerability(H_i);
        if v_i > vulnerability
            bool = 1;
            return;
        end
    end

end