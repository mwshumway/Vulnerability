function [bool] = proper_submatrices(A, B)
%PROPER_SUBMATRICES Determine whether or not the matrix M has proper
%submatrices
%   1 if proper submatrices
%   0 if there exists an inproper submatrix
    % Iterate over all possible non-empty subsets of indices
    dsf = DSF(A, B); [Q, ~] = dsf.dsf(size(A, 1));
    n = size(A, 1);
    M = eye(size(A, 1)) - Q;
    for k = 1:n-1
        % Generate all combinations of k indices from 1 to n
        combos = nchoosek(1:n, k);
        
        % Number of combinations for the current k
        numCombos = size(combos, 1);
        
        % Iterate over each combination
        for i = 1:numCombos
            % Get the current combination of indices
            currentIndices = combos(i, :);
            
            % Extract the principal submatrix
            subMatrix = M(currentIndices, currentIndices);
            inv_subMatrix = inv(subMatrix);
            
            % Apply the function to the submatrix
            proper = is_proper(inv_subMatrix);
            if proper == 0
                bool = 0;
                return;
            end
        end
    end
    bool = 1;
end